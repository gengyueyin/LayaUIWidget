var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var wesai;
(function (wesai) {
    var HoldemPoker;
    (function (HoldemPoker) {
        var CreditScoreMemberItem = /** @class */ (function (_super) {
            __extends(CreditScoreMemberItem, _super);
            function CreditScoreMemberItem() {
                var _this = _super.call(this) || this;
                _this.width = Laya.stage.width;
                _this.repayBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.repay);
                _this.creditAmount.x = 350 * (Laya.stage.width / 750);
                return _this;
            }
            CreditScoreMemberItem.prototype.renderItemData = function (data) {
                this.memberName.text = HoldemPoker.EmojiHelper.emojiDecode(data.playerName);
                HoldemPoker.Utility.loadImg(this.memberAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, data.playerHeaderUrl);
                this.creditAmount.text = HoldemPoker.Utility.getDotNum(data.creditScore - data.alreadyUseCreditScore) + '/' + HoldemPoker.Utility.getDotNum(data.creditScore);
                this.setCreditBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.settings);
                this.roleIcon.skin = HoldemPoker.ClubHelper.getMemberRoleIconSkin(data.playerDuties);
            };
            return CreditScoreMemberItem;
        }(ui.club.CreditScoreMemberItemUI));
        /**
         * 信用分管理
         */
        var CreditScoreUI = /** @class */ (function (_super) {
            __extends(CreditScoreUI, _super);
            function CreditScoreUI() {
                var _this = _super.call(this) || this;
                _this.clubStore = HoldemPoker.Sys.clubStore.self;
                _this.memberListData = [];
                _this.page = 1;
                _this.pageSize = 20;
                _this.canLoadMore = true;
                _this.size(Laya.stage.width, Laya.stage.height);
                _this.initLayout();
                return _this;
            }
            CreditScoreUI.prototype.Initalize = function () {
                this.onLanguageChanged();
                this.RegisterUIEvent();
                this.createList();
                this.Refresh();
            };
            CreditScoreUI.prototype.RegisterUIEvent = function () {
                // 返回按钮
                this.header.backBtn.on(Laya.Event.CLICK, this, this.onBack);
                //点击
                this.searchBtn.on(Laya.Event.CLICK, this, this.onSearchBtnClick);
                this.repayBtn.on(Laya.Event.CLICK, this, this.onRepayBtnClick);
                this.addBtn.on(Laya.Event.CLICK, this, this.onAddBtnClick);
                this.undoBtn.on(Laya.Event.CLICK, this, this.onUndoBtnClick);
                HoldemPoker.Sys.club.on(HoldemPoker.CREDIT_SCORE_CHANGE, this, this.updateCreditData);
                HoldemPoker.Sys.club.on(HoldemPoker.CLUB_STATE_CHANGE, this, this.updateFundData);
            };
            CreditScoreUI.prototype.UnregisterUIEvent = function () {
                // 返回按钮
                this.header.backBtn.off(Laya.Event.CLICK, this, this.onBack);
                //点击
                this.searchBtn.off(Laya.Event.CLICK, this, this.onSearchBtnClick);
                this.repayBtn.off(Laya.Event.CLICK, this, this.onRepayBtnClick);
                this.addBtn.off(Laya.Event.CLICK, this, this.onAddBtnClick);
                this.undoBtn.off(Laya.Event.CLICK, this, this.onUndoBtnClick);
                HoldemPoker.Sys.club.off(HoldemPoker.CREDIT_SCORE_CHANGE, this, this.updateCreditData);
                HoldemPoker.Sys.club.off(HoldemPoker.CLUB_STATE_CHANGE, this, this.updateFundData);
                this.offAll();
            };
            CreditScoreUI.prototype.onLanguageChanged = function () {
                this.header.titleLabel.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creditManage);
                this.repayBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.repay);
                this.totalDepositDisplay.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.clubDeposit);
                this.usedDepositDisplay.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.usedDeposit);
                this.undistributedDepositDisplay.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.remainDeposit);
                this.searchInput.prompt = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.memberIdOrName);
                this.memberLabel.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.members);
                this.theadCol2.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.balanceOrWanting);
                this.setCreditScore.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.setCreditScore);
                this.undoBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.recallDeposit);
                this.addBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.addDeposit);
            };
            CreditScoreUI.prototype.Refresh = function () {
                this.getDataAndRender();
            };
            CreditScoreUI.prototype.Dispose = function () {
                this.UnregisterUIEvent();
            };
            /**
             * 成员列表
             * @param name
             */
            CreditScoreUI.prototype.getMembers = function (name) {
                var _this = this;
                this.page = 1;
                this.canLoadMore = true;
                var postData;
                if (name) {
                    postData = {
                        clubId: this.clubStore.currentClubId,
                        page: this.page,
                        pageSize: 999,
                        playerName: name
                    };
                }
                else {
                    postData = {
                        clubId: this.clubStore.currentClubId,
                        page: this.page,
                        pageSize: 999,
                    };
                }
                // 成员
                HoldemPoker.Sys.club.clubMembers(postData).then(function (result) {
                    _this.memberListData = result.clubPlayer;
                    _this.renderMemberList();
                });
            };
            // 创建区域列表
            CreditScoreUI.prototype.createList = function () {
                // this.memberList.itemRender = CreditScoreMemberItem;
                // this.memberList.selectEnable = true;
                // this.memberList.selectHandler = new Laya.Handler(this, this.onItemSelect);
                // this.memberList.renderHandler = new Laya.Handler(this, this.updateItem);
                // this.memberList.array = this.memberListData;
                this.memberList.visible = false;
                if (!this.listView) {
                    this.listView = new HoldemPoker.ListView();
                    this.addChild(this.listView);
                }
                this.listView.left = 0;
                this.listView.right = 0;
                this.listView.top = 456;
                this.listView.bottom = 120;
                this.listView.vScrollBarSkin = "1334/common/vscroll.png";
                this.listView.itemRender = CreditScoreMemberItem;
                this.listView.selectEnable = true;
                this.listView.page = 1;
                this.listView.repeatX = 1;
                this.listView.renderHandler = new Laya.Handler(this, this.updateItem);
                this.listView.selectHandler = new Laya.Handler(this, this.onItemSelect);
                this.listView.scrollBar.elasticBackTime = HoldemPoker.SCROLLBAR_ELASTIC_TIME;
                this.listView.scrollBar.elasticDistance = HoldemPoker.SCROLLBAR_ELASTIC_DISTANCE;
                this.listView.array = this.memberListData;
                this.listView.setOnPullListener(this);
            };
            CreditScoreUI.prototype.renderMemberList = function () {
                // this.listView.array = this.memberListData.sort((a, b) => b.creditScore - a.creditScore);
                this.listView.array = this.memberListData;
                this.listView.refresh();
            };
            CreditScoreUI.prototype.onItemSelect = function (index) {
            };
            CreditScoreUI.prototype.updateItem = function (cell, index) {
                //会长才能有操作权限
                if (this.isPresident()) {
                    cell.repayBtn.visible = true;
                    cell.setCreditBtn.visible = true;
                    cell.creditAmount.right = 220;
                    if (!cell.setCreditBtn.clickHandler) {
                        cell.setCreditBtn.on(Laya.Event.CLICK, this, this.onSetCreditBtnClick, [this.memberListData[index]]);
                    }
                    if (cell.dataSource.alreadyUseCreditScore) {
                        if (!cell.repayBtn.clickHandler) {
                            cell.repayBtn.on(Laya.Event.CLICK, this, this.onSetRepayBtnClick, [this.memberListData[index]]);
                        }
                        cell.repayBtn.mouseEnabled = true;
                        cell.repayBtn.filters = null;
                    }
                    else {
                        cell.repayBtn.mouseEnabled = false;
                        cell.repayBtn.filters = [HoldemPoker.Utility.grayFilter()];
                    }
                }
                else {
                    cell.repayBtn.visible = false;
                    cell.setCreditBtn.visible = false;
                    cell.creditAmount.right = 100;
                }
                cell.renderItemData(cell.dataSource);
            };
            /**
             * 在地区子级，则返回上一级
             * 否则关闭页面
             */
            CreditScoreUI.prototype.onBack = function () {
                HoldemPoker.Sys.clubFsm.back();
            };
            CreditScoreUI.prototype.onSearchBtnClick = function () {
                this.getMembers(this.searchInput.text);
            };
            CreditScoreUI.prototype.onSetCreditBtnClick = function (playerData) {
                if (!playerData) {
                    return;
                }
                if (!this.creditScoreAssignDialog) {
                    this.creditScoreAssignDialog = new HoldemPoker.CreditScoreAssignDialog(this);
                }
                this.creditScoreAssignDialog.Initalize(playerData, this.clubData);
            };
            //帮助偿还
            CreditScoreUI.prototype.onSetRepayBtnClick = function (playerData) {
                if (!playerData) {
                    return;
                }
                if (!this.creditScoreRepayDialog) {
                    this.creditScoreRepayDialog = new HoldemPoker.CreditScoreRepayDialog(this);
                }
                this.creditScoreRepayDialog.Initalize(playerData, this.clubData);
            };
            CreditScoreUI.prototype.onRepayBtnClick = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.CreditScoreRepayState);
            };
            CreditScoreUI.prototype.onAddBtnClick = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.CreditScoreAddState);
            };
            CreditScoreUI.prototype.onUndoBtnClick = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.CreditScoreUndoState);
            };
            /**
             * 渲染数据
             */
            CreditScoreUI.prototype.getDataAndRender = function () {
                var _this = this;
                HoldemPoker.Sys.ui.startLoading('', 1);
                HoldemPoker.Sys.club.getClubWithPlayers({
                    clubId: this.clubStore.currentClubId,
                    page: this.page,
                    pageSize: this.pageSize,
                    type: '4'
                }).then(function (result) {
                    var club = result.club, clubPlayer = result.clubPlayer;
                    if (clubPlayer.length < _this.pageSize) {
                        _this.canLoadMore = false;
                    }
                    else {
                        _this.page++;
                    }
                    _this.clubData = club || _this.clubStore.club;
                    //成员
                    _this.memberListData = HoldemPoker.CommonHelper.arrayUnique(_this.memberListData.concat(clubPlayer), 'playerId');
                    _this.renderMemberList();
                    _this.listView.refreshComplete();
                    HoldemPoker.Sys.ui.stopLoading();
                    _this.renderClubInfo(club);
                    _this.refreshLayout();
                });
            };
            /**
             * 基金信息
             * @param {wesai.HoldemPoker.msg.Club} club
             */
            CreditScoreUI.prototype.renderClubInfo = function (club) {
                //总押金
                this.totalDepositLabel.text = HoldemPoker.Utility.getDotNum(club.creditScore);
                //已使用的
                this.usedDepositLabel.text = HoldemPoker.Utility.getDotNum(club.alreadyUseCreditScore);
                //未分配的
                var unusedCredit = club.creditScore - club.alreadyAllotCreditScore;
                this.undistributedDepositLabel.text = HoldemPoker.Utility.getDotNum(unusedCredit);
                //是否可以撤回
                this.undoBtn.disabled = unusedCredit <= 0;
                if (unusedCredit <= 0) {
                    HoldemPoker.Utility.setGray(this.undoBtn, true);
                }
                else {
                    HoldemPoker.Utility.setGray(this.undoBtn, false);
                    this.undoBtn.labelColors = '#dddddd,#dddddd,#dddddd';
                }
                //是否可以追加
                this.addBtn.disabled = this.clubStore.club.masterScores <= 0;
                if (this.clubStore.club.masterScores <= 0) {
                    HoldemPoker.Utility.setGray(this.addBtn, true);
                }
                else {
                    HoldemPoker.Utility.setGray(this.addBtn, false);
                    this.addBtn.labelColors = '#dddddd,#dddddd,#dddddd';
                }
            };
            /**
             * 更新信用分
             */
            CreditScoreUI.prototype.updateCreditData = function (result) {
                if (this && this.displayedInStage) {
                    var club = result.club;
                    if (club && club.id === this.clubStore.currentClubId) {
                        this.clubData = club;
                        this.renderClubInfo(club);
                        this.memberListData = this.memberListData.map(function (item) {
                            if (result.clubPlayer && result.clubPlayer.playerId === item.playerId) {
                                item = result.clubPlayer;
                            }
                            return item;
                        });
                        this.renderMemberList();
                        //重新请求数据
                        // this.getDataAndRender();
                    }
                    else {
                        console.log('msg.AllotPlayerCreditScoreNotify数据错误');
                    }
                }
            };
            /**
             * 更新基金
             */
            CreditScoreUI.prototype.updateFundData = function (result) {
                if (this && this.displayedInStage) {
                    var club = result.club;
                    if (club && club.id === this.clubStore.currentClubId) {
                        this.clubData = club;
                        this.renderClubInfo(club);
                    }
                    else {
                        console.log('msg.ClubMasterScoreNotify failed');
                    }
                }
            };
            /**
             * 初始布局
             */
            CreditScoreUI.prototype.initLayout = function () {
                var _a = Laya.stage, width = _a.width, height = _a.height;
                this.size(width, height);
                var grid3Width = width / 3;
                this.metaCol1.width = grid3Width;
                this.metaCol2.width = grid3Width;
                this.metaCol2.x = 1 * grid3Width;
                this.metaCol3.width = grid3Width;
                this.metaCol3.x = 2 * grid3Width;
                this.theadCol2.x = 350 * (width / 750);
                this.undoBtn.width = 350 * (width / 750);
                this.addBtn.width = 350 * (width / 750);
            };
            /**
             * 刷新
             */
            CreditScoreUI.prototype.onPullToRefresh = function () {
                this.memberListData = [];
                this.page = 1;
                this.canLoadMore = true;
                this.getDataAndRender();
            };
            /**
             * 下拉
             */
            CreditScoreUI.prototype.onPullUpToLoadMore = function () {
                if (this.canLoadMore) {
                    this.getDataAndRender();
                }
                else {
                    if (this.memberListData.length > this.pageSize) {
                        HoldemPoker.MessageDialog.showWithText(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.noMoreData));
                    }
                    this.listView.refreshComplete();
                }
            };
            /**
             * 会长
             * @returns {boolean}
             */
            CreditScoreUI.prototype.isPresident = function () {
                return this.clubData.corpus === HoldemPoker.msg.Corpus.PRESIDENT;
            };
            /**
             * 刷新布局
             */
            CreditScoreUI.prototype.refreshLayout = function () {
                //会长的处理
                if (this.isPresident()) {
                    this.listView.bottom = 120;
                    this.buttons.visible = true;
                    this.theadCol2.right = 220;
                    this.setCreditScore.visible = true;
                }
                else {
                    this.listView.bottom = 0;
                    this.buttons.visible = false;
                    this.theadCol2.right = 100;
                    this.setCreditScore.visible = false;
                }
                this.listView.refresh();
            };
            return CreditScoreUI;
        }(ui.club.CreditScoreViewUI));
        HoldemPoker.CreditScoreUI = CreditScoreUI;
    })(HoldemPoker = wesai.HoldemPoker || (wesai.HoldemPoker = {}));
})(wesai || (wesai = {}));
//# sourceMappingURL=CreditScoreUI.js.map