/// <reference path="../../system/sys.ts" />
/// <reference path="../../system/define.ts" />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var wesai;
(function (wesai) {
    var HoldemPoker;
    (function (HoldemPoker) {
        //不同类型列表的偏移
        var listOffsetMap = (_a = {},
            _a[3 /* NL_ROOM */] = 540,
            _a[1 /* SNG_ROOM */] = 634,
            _a[2 /* MTT_ROOM */] = 634,
            _a);
        //表头高度
        var tableHeaderHeight = 71;
        var NLGameSettleUI = /** @class */ (function (_super) {
            __extends(NLGameSettleUI, _super);
            function NLGameSettleUI(rc) {
                var _this = _super.call(this) || this;
                _this.awardListData = [];
                _this.isinsurance = 0;
                _this.roomTypeDisplay = (_a = {},
                    _a[1 /* SNG_ROOM */] = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.sngGame),
                    _a[2 /* MTT_ROOM */] = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.mttGameText),
                    _a[3 /* NL_ROOM */] = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.normalGame),
                    _a);
                //排名头像
                _this.shareImgName = null;
                //是否是旁观
                _this.isOnLooker = false;
                _this.rc = rc;
                _this.onLanguageChanged();
                _this.Initalize();
                _this.RegisterUIEvent();
                _this.createRankList();
                _this.nameItem = new HoldemPoker.PlayerNameItem();
                _this.addChild(_this.nameItem);
                _this.titleNameItem = new HoldemPoker.PlayerNameItem();
                _this.settleView.addChild(_this.titleNameItem);
                _this.initShare();
                return _this;
                var _a;
            }
            NLGameSettleUI.prototype.initShare = function () {
                if (!HoldemPoker.Utility.isShare()) {
                    this.recordShare.visible = false;
                }
            };
            NLGameSettleUI.prototype.Initalize = function () {
                this.visible = false;
                this.viewPosY = this.y;
                this.zOrder = 9999;
            };
            NLGameSettleUI.prototype.RegisterUIEvent = function () {
                this.header.backBtn.on(Laya.Event.CLICK, this, this.exit);
                this.recordShare.on(Laya.Event.CLICK, this, this.doRecordShare);
                this.videoBox.on(Laya.Event.CLICK, this, this.onEnterVideoList);
            };
            NLGameSettleUI.prototype.UnregisterUIEvent = function () {
                this.header.backBtn.off(Laya.Event.CLICK, this, this.exit);
                this.videoBox.off(Laya.Event.CLICK, this, this.onEnterVideoList);
            };
            NLGameSettleUI.prototype.doRecordShare = function () {
                var that = this;
                var name = Laya.Browser.window.conch.getCachePath() + "/" + Laya.timer.currTimer + "record.png";
                if (Laya.Browser.window.conch) {
                    Laya.Browser.window.conch.captureScreen(function (arrayBuff, width, height) {
                        //存储文件的方式
                        Laya.Browser.window.conch.saveAsPng(arrayBuff, width, height, name);
                        var path = "file:///" + name;
                        var shareData = new HoldemPoker.ShareData();
                        shareData.imgPath = path;
                        shareData.type = "img";
                        if (!that.imgShare) {
                            that.imgShare = new HoldemPoker.ImgShare(shareData);
                        }
                        that.imgShare.setShareImg(path);
                        that.addChild(that.imgShare);
                        that.imgShare.startAni();
                    });
                }
            };
            NLGameSettleUI.prototype.rankedShare = function () {
                if (Laya.Browser.window.conch) {
                    Laya.timer.once(100, this, this.doCapture);
                }
            };
            NLGameSettleUI.prototype.doCapture = function () {
                var that = this;
                var name = Laya.Browser.window.conch.getCachePath() + "/" + Laya.timer.currTimer + "gamesettle.png";
                if (Laya.Browser.window.conch) {
                    Laya.Browser.window.conch.captureScreen(function (arrayBuff, width, height) {
                        //存储文件的方式
                        Laya.Browser.window.conch.saveAsPng(arrayBuff, width, height, name);
                        var path = "file:///" + name;
                        var shareData = new HoldemPoker.ShareData();
                        shareData.imgPath = path;
                        shareData.type = "img";
                        if (!that.imgShare) {
                            that.imgShare = new HoldemPoker.ImgShare(shareData);
                        }
                        that.imgShare.setShareImg(path);
                        that.addChild(that.imgShare);
                        that.imgShare.startAni();
                    });
                }
            };
            NLGameSettleUI.prototype.onLanguageChanged = function () {
                this.playerInfo.insuranceIcon.skin = HoldemPoker.Sys.localization.getResDir("1334/mainGame/", "insurance.png");
                this.showVideoListLabel.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.showVideoListLabel);
            };
            NLGameSettleUI.prototype.Refresh = function () {
            };
            NLGameSettleUI.prototype.exit = function () {
                if (this.rc) {
                    this.rc.go(HoldemPoker.PlayState.LeaveState);
                }
                else {
                    this.removeSelf();
                }
            };
            NLGameSettleUI.prototype.onOpen = function () {
                this.visible = true;
                this.y = this.viewPosY;
                HoldemPoker.UIAnimator.Start(HoldemPoker.UIAnimator.asyncFadeIn, this, { duration: 200 });
                HoldemPoker.UIAnimator.Start(HoldemPoker.UIAnimator.asyncFloatUp, this, { duration: 600, ease: Laya.Ease.cubicOut });
            };
            NLGameSettleUI.prototype.Dispose = function () {
                this.UnregisterUIEvent();
                this.removeSelf();
            };
            /**
             * 不同类型元素位置和显示
             * @param type
             */
            NLGameSettleUI.prototype.resolveListAttr = function (type) {
                var offset = listOffsetMap[type];
                //旁观者的话不显示查看牌谱
                if (this.isOnLooker) {
                    offset -= 100;
                }
                //列表和表头位置
                this.rankPanel.y = offset;
                this.rankList.repeatX = 1;
                //表头名称显示
                this.tableCol1.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.playerRankNameLableText);
                this.tableCol2.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.handCountLabel);
                this.tableCol3.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.playerBankRollLableTextNormal);
                this.tableCol4.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.playerScoreTextLabelText);
                this.tableCol5.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.insuranceProfit);
                if (this.isinsurance > 0) {
                    this.tableCol5.visible = true;
                    this.tableCol3.right = 260;
                    this.tableCol4.right = 126;
                    this.tableCol5.right = 5;
                }
                else {
                    this.tableCol5.visible = false;
                    this.tableCol3.right = 200;
                    this.tableCol4.right = 10;
                }
            };
            /**
             * 处理不同类型的杂信息
             * @param type
             * @param data
             */
            NLGameSettleUI.prototype.resolveMetaInfo = function (type, data) {
                // 清除掉meta数据
                this.metaInfo.removeChildren();
                var recordDetailMetaInfoUI = Laya.Pool.getItemByClass('RecordDetailMetaInfo', HoldemPoker.RecordComponent.RecordDetailMetaInfo);
                recordDetailMetaInfoUI.renderData(data);
                this.metaInfo.addChild(recordDetailMetaInfoUI);
                this.pageTitle.text = '';
                this.titleNameItem.showChat(data.roomName, '#f0f0f0', 38, 400);
                this.titleNameItem.pos((Laya.stage.width - this.titleNameItem.width) / 2, 64);
            };
            /**
             * 创建者信息
             * @param data
             */
            NLGameSettleUI.prototype.setCreatorInfo = function (data) {
                //创建者头像
                HoldemPoker.Utility.loadImg(this.playerInfo.playerAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, data.createrIcon);
                //创建者名称
                // this.playerInfo.playerNameLabel.text = data.createrName;
                this.nameItem.showChat(data.createrName, "#999999", 26, 200);
                if (this.isOnLooker) {
                    this.nameItem.pos(114, 159);
                }
                else {
                    this.nameItem.pos(114, 259);
                }
                //比赛创建时间
                this.playerInfo.createdAt.text = data.createTime;
                //比赛人数/类型
                this.playerInfo.gameTypeDisplay.text = HoldemPoker.Sys.localization.getFormated(HoldemPoker.stringtable.recordGameTypeDisplay, data.sitCount, this.roomTypeDisplay[this.gameType]);
                this.playerInfo.insuranceIcon.visible = false;
                this.playerInfo.straddleIcon.visible = false;
                this.playerInfo.gameTypeDisplay.right = 38;
                if (this.gameType === 3 /* NL_ROOM */) {
                    if (data.insurance === 1) {
                        this.playerInfo.insuranceIcon.visible = true;
                        this.playerInfo.straddleIcon.right = 88;
                        if (data.straddle === 1) {
                            this.playerInfo.straddleIcon.visible = true;
                            this.playerInfo.gameTypeDisplay.right = 130;
                        }
                        else {
                            this.playerInfo.straddleIcon.visible = false;
                            this.playerInfo.gameTypeDisplay.right = 88;
                        }
                    }
                    else {
                        this.playerInfo.insuranceIcon.visible = false;
                        this.playerInfo.straddleIcon.right = 38;
                        if (data.straddle === 1) {
                            this.playerInfo.straddleIcon.visible = true;
                            this.playerInfo.gameTypeDisplay.right = 70;
                        }
                        else {
                            this.playerInfo.straddleIcon.visible = false;
                            this.playerInfo.gameTypeDisplay.right = 38;
                        }
                    }
                }
            };
            /**
             * 创建列表
             */
            NLGameSettleUI.prototype.createRankList = function () {
                this.rankList.renderHandler = new Laya.Handler(this, this.updateListItem);
            };
            /**
             * 列表更新
             * @param cell
             * @param index
             */
            NLGameSettleUI.prototype.updateListItem = function (cell, index) {
                cell.itemBg.skin = HoldemPoker.mttItemOddEvenBg[index % 2];
                if (cell.dataSource.playerId === HoldemPoker.Sys.players.self.id) {
                    cell.itemBg.skin = HoldemPoker.mttItemOddEvenBg[2];
                }
                cell.setIns(this.isinsurance);
                cell.renderItemData(cell.dataSource);
            };
            /**
             * 以前的方法
             * @param data
             */
            NLGameSettleUI.prototype.renderSettle = function (data) {
                //旁观者的话不显示查看牌谱
                if (data.gameType === 3 /* NL_ROOM */) {
                    if (data.overData && data.overData.gameResult) {
                        this.isOnLooker = !data.overData.gameResult.some(function (item) { return item.playerId === HoldemPoker.Sys.players.self.id; });
                    }
                }
                console.log('this.isOnLooker', this.isOnLooker);
                if (this.isOnLooker) {
                    this.videoBox.visible = false;
                    this.metaInfo.y = 223;
                    this.playerInfo.y = 120;
                }
                else {
                    this.videoBox.visible = true;
                    this.playerInfo.y = 220;
                    this.metaInfo.y = 323;
                }
                //从战绩进来查看牌谱用的是recordId，结束弹出来的取roomId
                if (data.recordId) {
                    this.recordId = data.recordId;
                }
                else if (data.roomId) {
                    this.recordId = data.roomId;
                }
                else {
                    this.recordId = undefined;
                }
                this.visible = true;
                this.gameType = data.gameType;
                if (data.gameType === 3 /* NL_ROOM */) {
                    //列表数据
                    if (data.overData && data.overData.gameResult) {
                        this.rankList.array = data.overData.gameResult;
                        this.rankList.repeatY = data.overData.gameResult.length;
                        this.rankList.itemRender = HoldemPoker.RecordComponent.RecordDetailItemNormal;
                        this.rankList.refresh();
                        if (this.isinsurance) {
                            data.isinsurance = this.isinsurance;
                        }
                        this.renderDespiteData(data.overData.gameResult);
                    }
                    // todo数据原因不这么放要出问题
                    // list相关元素属性
                    this.resolveListAttr(this.gameType);
                    // meta信息
                    this.resolveMetaInfo(this.gameType, data);
                    //创建者信息
                    this.setCreatorInfo(data);
                }
            };
            NLGameSettleUI.prototype.renderDespiteData = function (data) {
                this.mvpAvatar.avatarImg.skin = HoldemPoker.GPLAYER_DEFAULT_ICON;
                if (data.sort(this.resultSort)[0].icon) {
                    HoldemPoker.Utility.loadImg(this.mvpAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, data.sort(this.resultSort)[0].icon);
                }
                this.mvpNameLabel.text = data.sort(this.resultSort)[0].playerName;
                this.mvpNameLabel.centerX = 0;
                this.richAvatar.avatarImg.skin = HoldemPoker.GPLAYER_DEFAULT_ICON;
                if (data.sort(this.richSort)[0].icon) {
                    HoldemPoker.Utility.loadImg(this.richAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, data.sort(this.richSort)[0].icon);
                }
                this.richNameLabel.text = data.sort(this.richSort)[0].playerName;
                this.richNameLabel.centerX = -15;
                this.fishAvatar.avatarImg.skin = HoldemPoker.GPLAYER_DEFAULT_ICON;
                if (data.sort(this.resultSort)[data.length - 1].icon) {
                    HoldemPoker.Utility.loadImg(this.fishAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, data.sort(this.resultSort)[data.length - 1].icon);
                }
                this.fishNameLabel.text = data.sort(this.resultSort)[data.length - 1].playerName;
                this.fishNameLabel.centerX = -5;
            };
            NLGameSettleUI.prototype.richSort = function (data1, data2) {
                if (data1 && (data1.initBankroll === null || data1.initBankroll === undefined)) {
                    data1.initBankroll = 0;
                }
                if (data2 && (data2.initBankroll === null || data2.initBankroll === undefined)) {
                    data2.initBankroll = 0;
                }
                if (data1.initBankroll > data2.initBankroll) {
                    return -1;
                }
                else if (data1.initBankroll < data2.initBankroll) {
                    return 1;
                }
                else {
                    return 0;
                }
            };
            NLGameSettleUI.prototype.resultSort = function (data1, data2) {
                if (data1 && (data1.ganis === null || data1.ganis === undefined)) {
                    data1.ganis = 0;
                }
                if (data2 && (data2.ganis === null || data2.ganis === undefined)) {
                    data2.ganis = 0;
                }
                if (data1.ganis > data2.ganis) {
                    return -1;
                }
                else if (data1.ganis < data2.ganis) {
                    return 1;
                }
                else {
                    return 0;
                }
            };
            NLGameSettleUI.prototype.onEnterVideoList = function () {
                if (!this.videoListUI) {
                    this.videoListUI = new HoldemPoker.VideoListUI();
                }
                if (this.recordId) {
                    this.videoListUI.setRecordId(this.recordId);
                    this.videoListUI.Initalize();
                    this.addChild(this.videoListUI);
                }
                else {
                    console.log('recordId或者roomId不存在');
                }
            };
            return NLGameSettleUI;
        }(ui.record.NLRecordDetailViewUI));
        HoldemPoker.NLGameSettleUI = NLGameSettleUI;
        var _a;
    })(HoldemPoker = wesai.HoldemPoker || (wesai.HoldemPoker = {}));
})(wesai || (wesai = {}));
//# sourceMappingURL=NLGameSettleUI.js.map