/*
 * @Author: devilsome.曾挚
 * @Date: 2017-02-09 01:35:58
 * @Last Modified by: wesai.谢久伟
 * @Last Modified time: 2017-12-16 11:32:42
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var wesai;
(function (wesai) {
    var HoldemPoker;
    (function (HoldemPoker) {
        var PlayerAvatorViewUI = ui.club.PlayerAvatorViewUI;
        var ClubInfoOwnerViewUI = ui.club.ClubInfoOwnerViewUI;
        var ClubInfoMemberViewUI = ui.club.ClubInfoMemberViewUI;
        var ClubInfoApplyViewUI = ui.club.ClubInfoApplyViewUI;
        var ClubInfoUI = /** @class */ (function (_super) {
            __extends(ClubInfoUI, _super);
            function ClubInfoUI() {
                var _this = _super !== null && _super.apply(this, arguments) || this;
                //成员列表
                _this.membersData = [];
                //会长ID
                _this.presidentId = 0;
                //会长头像
                _this.presidentIcon = HoldemPoker.GPLAYER_DEFAULT_ICON;
                return _this;
            }
            ClubInfoUI.prototype.Initalize = function () {
                this.onLanguageChanged();
                //初始化一些值
                this.clubStore = HoldemPoker.Sys.clubStore.self;
                this.player = HoldemPoker.Sys.players.self;
                //请求数据
                this.getData();
                this.RegisterUIEvent();
            };
            ClubInfoUI.prototype.RegisterUIEvent = function () {
                // 返回
                this.header.backBtn.on(Laya.Event.CLICK, this, this.onBack);
                //编辑
                this.btnEdit.on(Laya.Event.CLICK, this, this.onEditBtnClick);
                HoldemPoker.Sys.club.on(HoldemPoker.CREDIT_SCORE_CHANGE, this, this.updateCreditData);
                HoldemPoker.Sys.club.on(HoldemPoker.CLUB_STATE_CHANGE, this, this.updateFundData);
                HoldemPoker.ClubScene.inst.on(HoldemPoker.CLUB_UPDATE, this, this.getData);
            };
            ClubInfoUI.prototype.UnregisterUIEvent = function () {
                // 返回
                this.header.backBtn.off(Laya.Event.CLICK, this, this.onBack);
                //编辑
                this.btnEdit.off(Laya.Event.CLICK, this, this.onEditBtnClick);
                HoldemPoker.Sys.club.off(HoldemPoker.CREDIT_SCORE_CHANGE, this, this.updateCreditData);
                HoldemPoker.Sys.club.off(HoldemPoker.CLUB_STATE_CHANGE, this, this.updateFundData);
                HoldemPoker.ClubScene.inst.off(HoldemPoker.CLUB_UPDATE, this, this.getData);
                this.offAll();
            };
            ClubInfoUI.prototype.onLanguageChanged = function () {
                this.btnEdit.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.editBtn);
            };
            ClubInfoUI.prototype.Refresh = function () {
            };
            ClubInfoUI.prototype.Dispose = function () {
                this.UnregisterUIEvent();
            };
            // 数据请求
            ClubInfoUI.prototype.getData = function () {
                var _this = this;
                //俱乐部信息 | 成员数据
                HoldemPoker.Sys.club.getClubWithPlayers({
                    clubId: this.clubStore.currentClubId,
                    page: 1,
                    pageSize: HoldemPoker.Sys.isPad ? 18 : 7,
                }).then(function (result) {
                    //俱乐部信息
                    if (result.club) {
                        _this.clubData = result.club;
                        _this.presidentId = _this.clubData.presidentId;
                        _this.clubStore.club = _this.clubData;
                        _this.clubStore.currentClubId = result.club.id;
                    }
                    //成员数据
                    if (result.clubPlayer) {
                        _this.membersData = result.clubPlayer;
                        for (var _i = 0, _a = _this.membersData; _i < _a.length; _i++) {
                            var player = _a[_i];
                            if (player.playerId === _this.presidentId) {
                                _this.presidentIcon = player.playerHeaderUrl;
                                break;
                            }
                        }
                    }
                    if (result.clubPlayerMe) {
                        _this.myClubPlayerData = result.clubPlayerMe;
                    }
                    else {
                        //自己的msg.ClubPlayer信息
                        _this.myClubPlayerData = _this.membersData.filter(function (item) { return item.playerId === _this.player.id; })[0];
                    }
                    //render数据
                    _this.resolveClubInfo(_this.clubData);
                    //render成员数据
                    _this.createMemberList();
                }).catch(function (error) {
                    // if (error && error.codes) {
                    //     MessageDialog.showWithText(Utility.toMessageWithCode(error.codes));
                    // } else {
                    //     MessageDialog.showWithText(Sys.localization.get(stringtable.getDetailInfoErr));
                    // }
                    HoldemPoker.Sys.clubFsm.back();
                });
            };
            /**
             * 处理不同权限界面显示
             * @param result
             */
            ClubInfoUI.prototype.resolveClubInfo = function (club) {
                if (!club) {
                    console.log("俱乐部数据错误");
                    return;
                }
                // 管理者
                if (this.isManager(club)) {
                    if (!this.renderView || !(this.renderView instanceof ClubInfoOwnerViewUI)) {
                        if (this.renderView) {
                            this.removeChild(this.renderView);
                        }
                        this.renderView = new ClubInfoOwnerViewUI;
                    }
                    this.btnEdit.visible = true;
                    //看成员
                    this.renderView.memberBox.on(Laya.Event.CLICK, this, this.onGoMemberView);
                    //基金管理
                    this.renderView.fundBox.on(Laya.Event.CLICK, this, this.onGoFundView);
                    // 渲染数据
                    this.renderOwnerData(this.renderView);
                }
                else {
                    if (club.applyStaus === HoldemPoker.msg.ApplStatus.PASS) {
                        //普通成员
                        if (!this.renderView || !(this.renderView instanceof ClubInfoMemberViewUI)) {
                            if (this.renderView) {
                                this.removeChild(this.renderView);
                            }
                            this.renderView = new ClubInfoMemberViewUI;
                        }
                        this.btnEdit.visible = false;
                        //看成员
                        this.renderView.memberBox.on(Laya.Event.CLICK, this, this.onGoMemberView);
                        //基金贡献
                        this.renderView.fundBox.on(Laya.Event.CLICK, this, this.onGoFundView);
                        // 渲染数据
                        this.renderMemberData(this.renderView);
                    }
                    else {
                        //未申请的用户
                        if (!this.renderView || !(this.renderView instanceof ClubInfoApplyViewUI)) {
                            if (this.renderView) {
                                this.removeChild(this.renderView);
                            }
                            this.renderView = new ClubInfoApplyViewUI;
                        }
                        this.btnEdit.visible = false;
                        // 渲染数据
                        this.renderApplyData(this.renderView);
                    }
                }
                //公共数据
                this.renderCommonData();
                //加入stage
                if (!this.renderView.displayedInStage) {
                    var _a = Laya.stage, width = _a.width, height = _a.height;
                    this.renderView.width = width;
                    this.renderView.height = height;
                    this.renderView.scrollContainer.width = width;
                    this.renderView.scrollContainer.height = height - 120;
                    this.addChild(this.renderView);
                    this.renderView.pos(0, 120);
                    //调整层级
                    this.header.zOrder = this.renderView.zOrder + 1;
                    this.btnEdit.zOrder = this.header.zOrder + 1;
                    //滚动但无滚动条
                    this.renderView.scrollContainer.vScrollBarSkin = '';
                }
                //位置调整
                this.layout();
                //介绍：申请页自动展开，其它点击展开
                if (this.renderView instanceof ClubInfoApplyViewUI) {
                    this.computeDescriptionLayout();
                }
                else {
                    this.renderView.introBox.on(Laya.Event.CLICK, this, this.computeDescriptionLayout);
                }
            };
            /**
             * 公共数据
             */
            ClubInfoUI.prototype.renderCommonData = function () {
                var _this = this;
                var club = this.clubData, clubInfoView = this.renderView;
                //title
                this.header.titleLabel.text = club.name;
                //俱乐部名称
                clubInfoView.clubName.text = club.name;
                //人数
                var vipLevelData = JSON.parse(club.vipLevel);
                clubInfoView.clubMemberCount.text = '' + club.playerNumber + '/' + vipLevelData.playerNumber;
                //地区
                clubInfoView.clubRegion.text = HoldemPoker.AreaHelper.getAreaNameByCode(club.region, true);
                //描述
                clubInfoView.clubDescription.text = club.describe;
                //俱乐部头像
                HoldemPoker.Utility.loadImg(clubInfoView.avatarBox.clubAvatar, HoldemPoker.CLUB_DEFAULT_AVATAR, club.logoUrl);
                //创建者头像
                HoldemPoker.Utility.loadImg(clubInfoView.creatorAvatar.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, this.presidentIcon);
                //创建者姓名
                clubInfoView.hostName.text = HoldemPoker.EmojiHelper.emojiDecode(club.presidentName);
                //分享ID
                clubInfoView.shareNum.text = '' + club.businessCard;
                //轮播图高度
                var bannerHeight = 376 * (Laya.stage.height / 1334);
                clubInfoView.bannerBox.height = bannerHeight;
                clubInfoView.content.y = bannerHeight;
                //轮播图
                var banners = club.imageUrl.split(',').filter(function (url) { return url !== ''; }).map(function (url) { return HoldemPoker.Utility.getImgUrl + url; });
                this.bannerSlide = new HoldemPoker.SlideWidget(banners, {
                    container: clubInfoView.bannerBox,
                    width: Laya.stage.width,
                    height: bannerHeight,
                    x: 0,
                    y: 0
                });
                //活跃值相关
                this.renderActivenessData();
                //赠送活跃值权限
                clubInfoView.activenessPresentBtn.offAll(Laya.Event.CLICK);
                if ((club.corpus === HoldemPoker.msg.Corpus.PRESIDENT || club.corpus === HoldemPoker.msg.Corpus.VICE_PRESIDENT)) {
                    clubInfoView.activenessPresentBtn.on(Laya.Event.CLICK, this, function () {
                        var activenessPresentDialog = new HoldemPoker.ActivenessPresentDialog(_this);
                        activenessPresentDialog.popup();
                    });
                }
                //本周目标
                this.renderView.goalBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.weekGoal);
                this.renderView.activenessPresentBtn.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.giving);
            };
            // 绑定数据
            ClubInfoUI.prototype.renderOwnerData = function (clubInfoView) {
                var club = this.clubData;
                clubInfoView.creatorText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creator);
                clubInfoView.membersText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.members);
                clubInfoView.fundText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.fund);
                clubInfoView.creditScoreText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creditScore);
                clubInfoView.introduceText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.introduce);
                clubInfoView.tableTypeSetText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.tableTypeSet);
                clubInfoView.deleteClubBox.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.deleteClub);
                clubInfoView.exitClubBox.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.exitClub);
                //基金大师分
                clubInfoView.masterScore.text = '' + HoldemPoker.Utility.getDotNum(club.masterScores);
                //可见常规桌配置
                clubInfoView.NLMangeBox.on(Laya.Event.CLICK, this, this.onGoTableSetting);
                var newNum = Laya.LocalStorage.getJSON('lastN' + HoldemPoker.msg.NotifyType.NotifyClub + 'StoregeNum' + HoldemPoker.MessageMgr.messageUid);
                if (newNum) {
                    clubInfoView.tipMassage.visible = true;
                }
                else {
                    clubInfoView.tipMassage.visible = false;
                }
                clubInfoView.msgBtn.on(Laya.Event.CLICK, this, this.onHandleMessage, [clubInfoView]);
                HoldemPoker.Sys.message.on(HoldemPoker.EVENT_MASSAGE_UPDATE, this, function (notifyType) {
                    if (notifyType === HoldemPoker.msg.NotifyType.NotifyClub) {
                        clubInfoView.tipMassage.visible = true;
                    }
                });
                if (club.corpus) {
                    //会长
                    if (club.corpus === HoldemPoker.msg.Corpus.PRESIDENT) {
                        // 解散操作
                        clubInfoView.deleteClubBox.visible = true;
                        clubInfoView.exitClubBox.visible = false;
                        //信用分
                        clubInfoView.creditScore.text = '';
                        clubInfoView.deleteClubBox.on(Laya.Event.CLICK, this, this.onDeleteClub);
                        //管理信用分
                        // clubInfoView.creditBox.on(Laya.Event.CLICK, this, this.onGoCreditView);
                    }
                    else if (club.corpus === HoldemPoker.msg.Corpus.VICE_PRESIDENT || club.corpus === HoldemPoker.msg.Corpus.MANAGER) {
                        // 退出
                        clubInfoView.deleteClubBox.visible = false;
                        clubInfoView.exitClubBox.visible = true;
                        clubInfoView.exitClubBox.on(Laya.Event.CLICK, this, this.onQuitClub);
                        //信用分
                        clubInfoView.creditScore.text = (this.myClubPlayerData.creditScore - this.myClubPlayerData.alreadyUseCreditScore) + '/' + this.myClubPlayerData.creditScore;
                        //偿还信用分
                        // clubInfoView.creditBox.on(Laya.Event.CLICK, this, this.onGoCreditView);
                    }
                }
                //管理信页面
                clubInfoView.creditBox.on(Laya.Event.CLICK, this, this.onGoCreditView);
                clubInfoView.inviteBox.on(Laya.Event.CLICK, this, this.goMyInvitationClubView);
                clubInfoView.myInvitationClubLabel.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.myInvitationClub);
            };
            // 绑定数据
            ClubInfoUI.prototype.renderMemberData = function (clubInfoView) {
                clubInfoView.creatorText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creator);
                clubInfoView.membersText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.members);
                clubInfoView.fundText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.fund);
                clubInfoView.creditScoreText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creditScore);
                clubInfoView.introduceText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.introduce);
                clubInfoView.exitClubBox.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.exitClub);
                // 退出
                clubInfoView.exitClubBox.on(Laya.Event.CLICK, this, this.onQuitClub);
                //信用分
                clubInfoView.creditScore.text = (this.myClubPlayerData.creditScore - this.myClubPlayerData.alreadyUseCreditScore) + '/' + this.myClubPlayerData.creditScore;
                //偿还信用分
                clubInfoView.creditBox.on(Laya.Event.CLICK, this, this.onGoCreditView);
            };
            // 绑定数据
            ClubInfoUI.prototype.renderApplyData = function (clubInfoView) {
                clubInfoView.creatorText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.creator);
                clubInfoView.introduceText.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.introduce);
                clubInfoView.joinClubBox.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.applyJoin);
                var club = this.clubData;
                //创建时间
                clubInfoView.crateTimeLabel.text = HoldemPoker.Sys.localization.getFormated(HoldemPoker.stringtable.createAt, HoldemPoker.WeDate.format(club.createTime, 'Y-m-d'));
                // 申请加入
                clubInfoView.joinClubBox.on(Laya.Event.CLICK, this, this.onApply);
            };
            /**
             * 介绍toggle
             * 己加入的点击展开
             * 未加入的直接展开显示
             */
            ClubInfoUI.prototype.computeDescriptionLayout = function () {
                // if (this.clubData.describe.length === 0) {
                //     return;
                // }
                var _this = this;
                //等文渲染完成
                Laya.timer.once(100, this, function () {
                    var headerHeight = 120;
                    var bannerHeight = 376;
                    var padding = 30;
                    var originBoxHeight = 100;
                    var originTextHeight = 30;
                    var lastBoxHeight = Math.max(originBoxHeight, _this.renderView.introBox.height);
                    var textHeight = Math.max(originTextHeight, _this.renderView.clubDescription.textField.textHeight);
                    // //只有一行字直接反回
                    // if (textHeight < 40) {
                    //     return;
                    // }
                    var finalHeight = Math.max(originBoxHeight, textHeight + padding * 2);
                    //未加入的直接看全部
                    if (_this.renderView instanceof ClubInfoApplyViewUI) {
                        _this.renderView.clubDescription.height = textHeight;
                        _this.renderView.introBox.height = finalHeight;
                        //创建时间的位置
                        _this.renderView.crateTimeLabel.y = _this.renderView.introBox.y + finalHeight;
                        //申请按钮的位置
                        var timeLabelOffset = _this.renderView.crateTimeLabel.y + _this.renderView.crateTimeLabel.height + padding;
                        var joinBoxHeight = _this.renderView.joinClubBox.height, stageHeight = Laya.stage.height;
                        //视口放的下吗？
                        if ((timeLabelOffset + joinBoxHeight + headerHeight + bannerHeight) > stageHeight) {
                            _this.renderView.content.height = timeLabelOffset + joinBoxHeight;
                            // this.renderView.joinClubBox.y = timeLabelOffset + bannerHeight;
                        }
                        else {
                            // this.renderView.joinClubBox.y = stageHeight - headerHeight - joinBoxHeight;
                        }
                        _this.renderView.joinClubBox.y = stageHeight - joinBoxHeight - headerHeight;
                        // this.renderView.joinClubBox.zOrder = this.renderView.zOrder + 1;
                        _this.renderView.joinClubBox.visible = true;
                    }
                    else {
                        //加入了的点击toggle展开
                        // if (lastBoxHeight === finalHeight) {
                        //     return;
                        // }
                        if (originBoxHeight === lastBoxHeight) {
                            _this.renderView.clubDescription.height = textHeight;
                            _this.renderView.introBox.height = finalHeight;
                            //这后内容的位置
                            _this.renderView.otherBox.y = _this.renderView.introBox.y + finalHeight + padding;
                        }
                        else {
                            _this.renderView.clubDescription.height = originTextHeight;
                            _this.renderView.introBox.height = originBoxHeight;
                            //这后内容的位置
                            _this.renderView.otherBox.y = _this.renderView.introBox.y + originBoxHeight + padding;
                        }
                    }
                    //刷新容器
                    _this.renderView.scrollContainer.refresh();
                });
            };
            // 创建成员列表
            ClubInfoUI.prototype.createMemberList = function () {
                if ((this.renderView instanceof ClubInfoOwnerViewUI) || (this.renderView instanceof ClubInfoMemberViewUI)) {
                    this.renderView.memberList.width = HoldemPoker.Sys.isPad ? 1300 : 500;
                    this.renderView.memberList.itemRender = PlayerAvatorViewUI;
                    this.renderView.memberList.selectEnable = false;
                    this.renderView.memberList.renderHandler = new Laya.Handler(this, this.renderMemberItem);
                    this.renderView.memberList.array = this.membersData;
                }
            };
            ClubInfoUI.prototype.onHandleMessage = function (clubInfoView) {
                HoldemPoker.Sys.message.openMessageBoxView();
                HoldemPoker.Sys.message.messageBoxViewUI.systemMListView.visible = false;
                HoldemPoker.Sys.message.messageBoxViewUI.clubMListView.visible = false;
                // 移除tip存储条数数据
                Laya.LocalStorage.removeItem('lastN' + HoldemPoker.msg.NotifyType.NotifyClub + 'StoregeNum' + HoldemPoker.MessageMgr.messageUid);
                HoldemPoker.Sys.message.messageBoxViewUI.navigationBar.titleLabel.text = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.dynamicClubText);
                this.messageCListViewUI = new HoldemPoker.MessageClubListUI();
                HoldemPoker.Sys.message.messageBoxViewUI.clubMListView.addChild(this.messageCListViewUI);
                HoldemPoker.Sys.message.messageBoxViewUI.clubMListView.visible = true;
                // 隐藏tip
                clubInfoView.tipMassage.visible = false;
            };
            //成员头像
            ClubInfoUI.prototype.renderMemberItem = function (cell, index) {
                //头像
                HoldemPoker.Utility.loadImg(cell.avatarComp.avatarImg, HoldemPoker.GPLAYER_DEFAULT_ICON, cell.dataSource.playerHeaderUrl);
                //标识
                cell.roleIcon.skin = HoldemPoker.ClubHelper.getMemberRoleIconSkin(cell.dataSource.playerDuties);
            };
            /**
             * 申请加入
             */
            ClubInfoUI.prototype.onApply = function () {
                var requestData = {
                    clubId: this.clubData.id,
                    region: this.clubData.region
                };
                HoldemPoker.Sys.club.joinClub(requestData).then(function () {
                    HoldemPoker.MessageDialog.showWithText(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.applyIsSubmit));
                    HoldemPoker.Sys.clubFsm.back();
                }).catch(function (err) {
                    // MessageDialog.showWithText(Sys.localization.get(stringtable.applyClubErr));
                });
            };
            /**
             * 退出当前俱乐部
             */
            ClubInfoUI.prototype.onQuitClub = function () {
                var club = this.clubData;
                if (!club) {
                    return;
                }
                HoldemPoker.MessagePrompt.openPrompt(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.quitClubTip), new Laya.Handler(this, function () {
                    var requestData = {
                        clubId: club.id
                    };
                    HoldemPoker.Sys.club.quitClub(requestData).then(function () {
                        HoldemPoker.Sys.clubFsm.back();
                    }).catch(function (error) {
                        if (error && error.codes === HoldemPoker.msg.Codes.ErrAlreadyUseCreditScoreIsNotZero) {
                            HoldemPoker.MessageDialog.showWithText(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.ErrAlreadyUseCreditScoreIsNotZero));
                        }
                    });
                }));
            };
            /**
             * 解散当前俱乐部
             */
            ClubInfoUI.prototype.onDeleteClub = function () {
                var club = this.clubData;
                if (!club) {
                    return;
                }
                HoldemPoker.MessagePrompt.openPrompt(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.dissolveClubTip), new Laya.Handler(this, function () {
                    var requestData = {
                        clubId: club.id
                    };
                    HoldemPoker.Sys.club.removeClub(requestData).then(function () {
                        HoldemPoker.Sys.clubFsm.back();
                    }).catch(function () {
                        // MessageDialog.showWithText(Sys.localization.get(stringtable.dissolveClubErr));
                    });
                }));
            };
            /**
             * 返回
             */
            ClubInfoUI.prototype.onBack = function () {
                HoldemPoker.Sys.clubFsm.back();
            };
            /**
             * 编辑
             */
            ClubInfoUI.prototype.onEditBtnClick = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.ClubEditState);
            };
            /**
             * 查看成员
             */
            ClubInfoUI.prototype.onGoMemberView = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.ClubMemberListState);
            };
            /**
             * 是否会长
             * @param club
             * @returns {boolean}
             */
            ClubInfoUI.prototype.isPresidentRole = function (club) {
                return club.hasOwnProperty('corpus') && club.corpus === HoldemPoker.msg.Corpus.PRESIDENT;
            };
            /**
             * 信用分页面
             */
            ClubInfoUI.prototype.onGoCreditView = function () {
                //管理员,会长，副会长能时信用分管理页面
                if (this.clubData.hasOwnProperty('corpus') && (this.clubData.corpus > HoldemPoker.msg.Corpus.NOT_JOIN && this.clubData.corpus < HoldemPoker.msg.Corpus.NORMAL)) {
                    HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.CreditScoreState);
                }
                else {
                    HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.CreditScoreRepayState);
                }
            };
            /**
             * 可见牌桌页面
             */
            ClubInfoUI.prototype.onGoTableSetting = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.RoomPermissionSettingState);
            };
            /**
             * 基金页面
             */
            ClubInfoUI.prototype.onGoFundView = function () {
                var club = this.clubData;
                if (!club) {
                    return;
                }
                if (this.isManager(club)) {
                    HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.FundMgrState);
                }
                else {
                    if (club.applyStaus === HoldemPoker.msg.ApplStatus.PASS) {
                        HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.FundContributeState);
                    }
                }
            };
            /**
             * 数据完成后一些元素位置调整
             */
            ClubInfoUI.prototype.layout = function () {
                var renderView = this.renderView;
                //地区位置
                if (renderView.clubRegion) {
                    this.elementRightLayout(renderView.clubRegion, 30);
                }
                //基金
                if (renderView.masterScore) {
                    this.elementRightLayout(renderView.masterScore);
                }
                //信用分位置
                if (renderView.creditScore) {
                    this.elementRightLayout(renderView.creditScore);
                }
            };
            /**
             * 右对齐元素位置调整
             */
            ClubInfoUI.prototype.elementRightLayout = function (label, offset) {
                if (offset === void 0) { offset = 60; }
                label.x = Laya.stage.width - label.width - offset;
            };
            /**
             * 更新信用分
             */
            ClubInfoUI.prototype.updateCreditData = function (result) {
                if (this && this.renderView && this.displayedInStage) {
                    var club = result.club, clubPlayer = result.clubPlayer;
                    if (club && club.id === this.clubStore.currentClubId) {
                        //重新请求数据
                        var renderView = this.renderView;
                        if (renderView.creditScore) {
                            renderView.creditScore.text = (clubPlayer.creditScore - clubPlayer.alreadyUseCreditScore) + '/' + clubPlayer.creditScore;
                            this.elementRightLayout(renderView.creditScore);
                        }
                    }
                    else {
                        console.log('msg.AllotPlayerCreditScoreNotify数据错误');
                    }
                }
            };
            /**
             * 更新基金
             */
            ClubInfoUI.prototype.updateFundData = function (result) {
                if (this && this.renderView && this.displayedInStage) {
                    var club = result.club;
                    if (club && club.id === this.clubStore.currentClubId) {
                        //重新请求数据
                        var renderView = this.renderView;
                        if (renderView.masterScore) {
                            renderView.masterScore.text = '' + HoldemPoker.Utility.getDotNum(club.masterScores);
                            this.elementRightLayout(renderView.creditScore);
                        }
                    }
                    else {
                        console.log('msg.ClubMasterScoreNotify failed');
                    }
                }
            };
            /**
             * 管理员
             * @param {wesai.HoldemPoker.msg.Club} club
             * @returns {boolean}
             */
            ClubInfoUI.prototype.isManager = function (club) {
                return club.hasOwnProperty('corpus') && club.corpus > HoldemPoker.msg.Corpus.NOT_JOIN && club.corpus < HoldemPoker.msg.Corpus.NORMAL;
            };
            /**
             * 活跃值相关值
             */
            ClubInfoUI.prototype.renderActivenessData = function () {
                var clubInfoView = this.renderView;
                var club = this.clubData;
                var maxWidth = Laya.stage.width - 60 * 2;
                clubInfoView.activenessProgress.value = club.clubActivity / club.maxTarget;
                //基础点
                var baseOff = club.showTarget / club.maxTarget * maxWidth;
                clubInfoView.baseActivenessBox.x = baseOff;
                clubInfoView.baseTickBg.x = baseOff;
                clubInfoView.baseStar.skin = club.clubActivity > club.showTarget ? '1334/common/progress1_tick_in.png' : '1334/common/progress1_tick_default.png';
                //目标点
                var goalOff = club.safeTarget / club.maxTarget * maxWidth;
                clubInfoView.goalActivenessBox.x = goalOff;
                clubInfoView.goalTickBg.x = goalOff;
                clubInfoView.goalStar.skin = club.clubActivity > club.safeTarget ? '1334/common/progress1_tick_in.png' : '1334/common/progress1_tick_default.png';
                //活跃值clubActivenessInfo
                clubInfoView.activenessInfo.text = HoldemPoker.Sys.localization.getFormated(HoldemPoker.stringtable.clubActivenessInfo, club.clubActivity, club.giveActivity);
                clubInfoView.baseActiveness.text = '' + club.showTarget;
                clubInfoView.goalActiveness.text = '' + club.safeTarget;
                clubInfoView.maxActiveness.text = '' + club.maxTarget;
                //可赠送大于0才能赠送
                clubInfoView.activenessPresentBtn.visible = (club.giveActivity > 0) && (club.corpus === HoldemPoker.msg.Corpus.PRESIDENT || club.corpus === HoldemPoker.msg.Corpus.VICE_PRESIDENT);
                //活跃值提示
                clubInfoView.helpBtn.offAll(Laya.Event.CLICK);
                clubInfoView.helpBtn.on(Laya.Event.CLICK, this, function (e) {
                    e.stopPropagation();
                    // let word: string = Sys.localization.get(stringtable.clubActivenessTip);
                    var word = "\u53EF\u89C1\u724C\u684C\u503C = " + club.showTarget + "\n\u8868\u793A\u4FF1\u4E50\u90E8\u6D3B\u8DC3\u5FC5\u987B\u8FBE\u5230\u8BE5\u503C\uFF0C\u624D\u80FD\u770B\u89C1\u724C\u5C40\n\u8870\u51CF\u503C = " + (club.safeTarget - club.showTarget) + "\n\u8868\u793A\u4FF1\u4E50\u90E8\u6D3B\u8DC3\u5B9A\u671F\u4F1A\u6263\u9664\u7684\u503C(\u6BCF\u670810\u53F7\u4E007\u70B9)\n\u672C\u6708\u76EE\u6807\u503C = " + club.safeTarget + "\n\u8BE5\u503C\u516C\u5F0F\u4E3A\u53EF\u89C1\u724C\u684C\u503C + \u8870\u51CF\u503C\n\u53EF\u8D60\u9001\u4E0B\u9650\u503C = " + club.giveTarget + "\n\u5F53\u6D3B\u8DC3\u503C\u5927\u4E8E\u53EF\u8D60\u9001\u503C\uFF0C\u8D85\u8FC7\u90E8\u5206\u80FD\u591F\u8D60\u9001\n\u6D3B\u8DC3\u503C\u4E0A\u9650 = " + club.maxTarget + "\n\u5F53\u4FF1\u4E50\u90E8\u8FBE\u5230\u8BE5\u503C\u540E\u6D3B\u8DC3\u503C\u5C06\u4E0D\u518D\u589E\u52A0";
                    HoldemPoker.ToolTipUI.showToolTip(word, clubInfoView.helpBtn, {
                        color: '#ffffff'
                    });
                });
            };
            /**
             * 去我邀请的俱乐部
             */
            ClubInfoUI.prototype.goMyInvitationClubView = function () {
                HoldemPoker.Sys.clubFsm.Go(HoldemPoker.ClubState.MyInvitationClubState);
            };
            return ClubInfoUI;
        }(ui.club.ClubInfoViewUI));
        HoldemPoker.ClubInfoUI = ClubInfoUI;
    })(HoldemPoker = wesai.HoldemPoker || (wesai.HoldemPoker = {}));
})(wesai || (wesai = {}));
//# sourceMappingURL=ClubInfoUI.js.map