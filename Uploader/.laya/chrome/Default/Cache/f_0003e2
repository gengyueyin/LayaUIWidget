var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// /*
//  * @Author: riven 
//  * @Date: 2017-03-15
//  * @Last Modified by: riven
//  * @Last Modified time: 2017-03-15
//  */
var wesai;
(function (wesai) {
    var HoldemPoker;
    (function (HoldemPoker) {
        /**
         *
         *
         * @export
         * @class GameReplayItemUI
         * @extends {ui.GameReplayListViewUI}
         * @implements {GameUIBase}
         */
        var GameReplayListUI = /** @class */ (function (_super) {
            __extends(GameReplayListUI, _super);
            function GameReplayListUI() {
                var _this = _super.call(this) || this;
                _this.infoList = new Array;
                _this.infoType1 = new Array;
                _this.infoType2 = new Array;
                _this.canLoadMore = true;
                _this.onLanguageChanged();
                _this.RegisterUIEvent();
                _this.Initalize();
                /**
                 * 数据为空UI
                 */
                if (_this.emptyUi === undefined) {
                    _this.emptyUi = Laya.Pool.getItemByClass('EmptyUI', HoldemPoker.Club.Components.EmptyUI);
                    _this.emptyUi.init(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.recordEmptyTip), 0, 0);
                    _this.addChild(_this.emptyUi);
                    _this.emptyUi.visible = true;
                }
                _this.bindResponse();
                return _this;
            }
            GameReplayListUI.prototype.Initalize = function () {
                HoldemPoker.Sys.ui.push(this);
                this.initListView();
                this.RegisterUIEvent();
                this.Refresh();
            };
            GameReplayListUI.prototype.initListView = function () {
                this.listView = new HoldemPoker.ListView();
                this.addChild(this.listView);
                // this.listView.pos(0, 185);
                // this.listView.width = 750;
                // this.listView.height = 1150;
                this.listView.left = 0;
                this.listView.right = 0;
                this.listView.top = 185;
                this.listView.bottom = 0;
                this.listView.vScrollBarSkin = "1334/common/vscroll.png";
                // this.listView.setRefreshEnable(false);
                this.listView.itemRender = HoldemPoker.GameRecordItemUI;
                this.listView.selectEnable = true;
                this.listView.page = 1;
                this.listView.repeatX = 1;
                this.listView.mouseHandler = new Laya.Handler(this, this.onMouse);
                this.listView.renderHandler = new Laya.Handler(this, this.updateItem);
                this.listView.scrollBar.elasticBackTime = HoldemPoker.SCROLLBAR_ELASTIC_TIME;
                this.listView.scrollBar.elasticDistance = HoldemPoker.SCROLLBAR_ELASTIC_DISTANCE;
                this.listView.array = [];
                this.listView.setOnPullListener(this);
                if (!this.gameSettleUI) {
                    this.gameSettleUI = new HoldemPoker.GameSettleUI(null);
                }
                if (!this.nlGameSettleUI) {
                    this.nlGameSettleUI = new HoldemPoker.NLGameSettleUI(null);
                }
            };
            GameReplayListUI.prototype.updateItem = function (cell, index) {
                cell.setupData(cell.dataSource);
            };
            GameReplayListUI.prototype.onItemClick = function (data) {
                this.getDetail(data.detailId);
            };
            /**
             * 点击事件
             * @param e
             * @param index
             */
            GameReplayListUI.prototype.onMouse = function (e, index) {
                if (e.type === Laya.Event.CLICK) {
                    var data = this.listView.selection.dataSource;
                    if (data && data.detailId) {
                        this.getDetail(data.detailId);
                    }
                }
            };
            /**
             * 服务器返回
             */
            GameReplayListUI.prototype.bindResponse = function () {
                var _this = this;
                HoldemPoker.Sys.net.registerNotifyMsg("RecordListResponse", this, function (data) {
                    _this.listView.refreshComplete();
                    if (data.Records.record.length > 0) {
                        _this.listView.visible = true;
                        _this.emptyUi.visible = false;
                        var roomType = data.Records.record[0].roomType;
                        switch (roomType) {
                            case 1 /* SNG_ROOM */://sng
                                // this.infoList = data.Records.record;
                                break;
                            case 2 /* MTT_ROOM */://mtt
                                // this.infoList = data.Records.record;
                                break;
                            case 3 /* NL_ROOM */://普通
                                // this.infoList = data.Records.record;
                                break;
                        }
                        var originData = data.Records.record;
                        var infoList = [];
                        if (roomType === 2 /* MTT_ROOM */) {
                            originData = originData.sort(_this.sortByStartTime);
                            infoList = _this.resolveMonthAndDay(originData, 'startTime');
                        }
                        else {
                            originData = originData.sort(_this.sortByCreateTime);
                            infoList = _this.resolveMonthAndDay(originData);
                        }
                        if (infoList.length < 30) {
                            _this.canLoadMore = false;
                        }
                        else {
                            _this.page++;
                            _this.canLoadMore = true;
                        }
                        _this.infoList = _this.infoList.concat(infoList);
                        _this.listView.array = _this.infoList;
                        _this.listView.refresh();
                    }
                    else {
                        _this.canLoadMore = true;
                        if (_this.infoList.length <= 0) {
                            _this.listView.visible = false;
                            _this.emptyUi.visible = true;
                        }
                    }
                });
                HoldemPoker.Sys.net.registerNotifyMsg("RecordDetailResponse", this, function (data) {
                    var roomType = data.rtype;
                    switch (roomType) {
                        case 1 /* SNG_ROOM */: //sng
                        case 2 /* MTT_ROOM */://mtt
                            var rule = {
                                applyCost: data.apply,
                                initChip: data.initBankRoll,
                                actionCount: data.upBlindTime,
                                signUpType: data.signUpType
                            };
                            var reward = [];
                            for (var _i = 0, _a = data.recordDetailInfo; _i < _a.length; _i++) {
                                var rd = _a[_i];
                                // let gr: msg.sngReward = {
                                var gr = {
                                    rank: rd.rank,
                                    icon: rd.icon,
                                    rewardGold: rd.gains,
                                    playerId: rd.playerId,
                                    playerName: rd.playerName,
                                    rewardItems: rd.itemReward,
                                    bankRoll: rd.bankRoll,
                                    buyCount: rd.buyCount,
                                    floatRewardItemId: data.floatRewardItemId,
                                };
                                reward.push(gr);
                            }
                            var od = {
                                recordId: data.id,
                                gameType: data.rtype,
                                sitId: null,
                                rank: null,
                                sngReward: reward,
                                gameRule: rule,
                                //新加的
                                createrIcon: data.createrIcon,
                                createrName: data.createrName,
                                createTime: data.createTime,
                                sitCount: data.sitCount,
                                roomName: data.roomName,
                                gameTime: data.gameTime,
                                mttallbouns: data.mttallbouns,
                                startTime: data.startTime,
                                playerCount: data.playerCount,
                                totalRebuyCount: data.totalRebuyCount,
                                signUpType: data.signUpType,
                            };
                            _this.gameSettleUI.renderSettle(od);
                            _this.gameSettleUI.width = Laya.stage.width;
                            _this.gameSettleUI.height = Laya.stage.height;
                            HoldemPoker.Sys.ui.push(_this.gameSettleUI);
                            break;
                        case 3 /* NL_ROOM */://普通
                            var gameResult = [];
                            for (var _b = 0, _c = data.recordDetailInfo; _b < _c.length; _b++) {
                                var rd = _c[_b];
                                var gr = {
                                    ganis: rd.gains,
                                    icon: rd.icon,
                                    initBankroll: rd.bankRoll,
                                    playerId: rd.playerId,
                                    playerName: rd.playerName,
                                    floatRewardItemId: data.floatRewardItemId,
                                    totalInsurance: rd.totalInsurance,
                                    handCount: rd.handCount,
                                };
                                gameResult.push(gr);
                            }
                            var d = {
                                allBankroll: data.allBankRoll,
                                handCount: data.handCount,
                                maxPot: data.maxPot,
                                gameResult: gameResult
                            };
                            var overData = {
                                recordId: data.id,
                                overData: d,
                                gameType: data.rtype,
                                //新加的
                                initChip: data.allBankRoll,
                                createrIcon: data.createrIcon,
                                createrName: data.createrName,
                                createTime: data.createTime,
                                sitCount: data.sitCount,
                                roomName: data.roomName,
                                gameTime: data.gameTime,
                                bb: data.bb,
                                sd: data.sb,
                                floatRewardItemId: data.floatRewardItemId,
                                insurance: data.insurance,
                                straddle: data.straddle,
                            };
                            _this.nlGameSettleUI.isinsurance = data.insurance;
                            _this.nlGameSettleUI.renderSettle(overData);
                            _this.nlGameSettleUI.width = Laya.stage.width;
                            _this.nlGameSettleUI.height = Laya.stage.height;
                            HoldemPoker.Sys.ui.push(_this.nlGameSettleUI);
                            break;
                    }
                });
            };
            GameReplayListUI.prototype.unBindResponse = function () {
                HoldemPoker.Sys.net.unRegisterNotifyMsg('RecordListResponse');
                HoldemPoker.Sys.net.unRegisterNotifyMsg('RecordDetailResponse');
            };
            GameReplayListUI.prototype.getData = function () {
                switch (HoldemPoker.Sys.lastRoomType) {
                    case HoldemPoker.RoomType.GameDefault:
                        this.replayTab.selectedIndex = 0;
                        break;
                    case HoldemPoker.RoomType.GameMtt:
                        this.replayTab.selectedIndex = 2;
                        break;
                    case HoldemPoker.RoomType.GameSng:
                        this.replayTab.selectedIndex = 1;
                        break;
                    default:
                        this.replayTab.selectedIndex = 0;
                        break;
                }
                this.onTabSelect(this.replayTab.selectedIndex);
                this.infoList = [];
            };
            /**
             * 选项卡点击
             * @param index
             */
            GameReplayListUI.prototype.onTabSelect = function (index) {
                index = this.replayTab.selectedIndex;
                this.page = 1;
                this.infoList = [];
                this.getMessage(index);
            };
            GameReplayListUI.prototype.getMessage = function (index) {
                switch (index) {
                    case 0:
                        this.currentType = 3;
                        HoldemPoker.Sys.net.requestNotify("RecordListRequest", { page: 1, recordType: 3 });
                        break;
                    case 1:
                        this.currentType = 1;
                        HoldemPoker.Sys.net.requestNotify("RecordListRequest", { page: 1, recordType: 1 });
                        break;
                    case 2:
                        this.currentType = 2;
                        HoldemPoker.Sys.net.requestNotify("RecordListRequest", { page: 1, recordType: 2 });
                        break;
                }
            };
            GameReplayListUI.prototype.RegisterUIEvent = function () {
                HoldemPoker.Sys.localization.event.on(HoldemPoker.GEvent.LANGUAGE_CHANGED, this, this.onLanguageChanged);
                this.replayTab.on(Laya.Event.CLICK, this, this.onTabSelect);
            };
            GameReplayListUI.prototype.UnregisterUIEvent = function () {
                HoldemPoker.Sys.localization.event.off(HoldemPoker.GEvent.LANGUAGE_CHANGED, this, this.onLanguageChanged);
                this.replayTab.off(Laya.Event.CLICK, this, this.onTabSelect);
            };
            GameReplayListUI.prototype.onLanguageChanged = function () {
                this.tabItem0.label = HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.normalTable);
            };
            GameReplayListUI.prototype.onPullToRefresh = function () {
                this.infoList = [];
                this.page = 1;
                HoldemPoker.Sys.net.requestNotify("RecordListRequest", { page: 1, recordType: this.currentType });
            };
            GameReplayListUI.prototype.onPullUpToLoadMore = function () {
                if (this.canLoadMore) {
                    HoldemPoker.Sys.net.requestNotify("RecordListRequest", { page: this.page, recordType: this.currentType });
                }
                else {
                    HoldemPoker.MessageDialog.showWithText(HoldemPoker.Sys.localization.get(HoldemPoker.stringtable.noMoreData));
                    this.listView.refreshComplete();
                }
            };
            GameReplayListUI.prototype.getDetail = function (detailId) {
                HoldemPoker.Sys.net.requestNotify("RecordDetailRequest", { id: detailId });
                // if (!this.vv) {
                //     this.vv = new VideoView();
                // }
                // this.vv.getData(detailId);
            };
            GameReplayListUI.prototype.Refresh = function () {
            };
            GameReplayListUI.prototype.Dispose = function () {
                this.UnregisterUIEvent();
                HoldemPoker.Sys.ui.remove(this);
                this.offAll();
                this.destroy();
            };
            GameReplayListUI.prototype.backAction = function () {
                HoldemPoker.Sys.fsm.Go(HoldemPoker.GameState.MainState);
                this.Dispose();
            };
            /**
             * 创建时间倒序排序
             * @param a
             * @param b
             * @returns {number}
             */
            GameReplayListUI.prototype.sortByCreateTime = function (a, b) {
                return Date.parse(new Date(b.createTime).toString()) - Date.parse(new Date(a.createTime).toString());
            };
            /**
             * 开赛时间倒序排序
             * @param a
             * @param b
             * @returns {number}
             */
            GameReplayListUI.prototype.sortByStartTime = function (a, b) {
                return Date.parse(new Date(b.startTime).toString()) - Date.parse(new Date(a.startTime).toString());
            };
            /**
             * 按月日分组
             * 处理月日，每个元素加上monthDay
             * @param arr
             */
            GameReplayListUI.prototype.resolveMonthAndDay = function (arr, timeKey) {
                var _this = this;
                if (timeKey === void 0) { timeKey = 'createTime'; }
                var tempArr = [], monthDay = null, prevItem = null, prevMonthDay = null;
                tempArr = arr.map(function (item, index) {
                    monthDay = _this.getMonthDay(item[timeKey]);
                    item.monthDay = monthDay;
                    if (index > 0) {
                        prevItem = arr[index - 1];
                        prevMonthDay = _this.getMonthDay(prevItem[timeKey]);
                    }
                    if (monthDay === prevMonthDay) {
                        item.monthDay = null;
                    }
                    return item;
                });
                return tempArr;
            };
            //时间字符串中取得月份日期
            GameReplayListUI.prototype.getMonthDay = function (monthDay) {
                return monthDay.slice(5, 10);
            };
            return GameReplayListUI;
        }(ui.GameReplayListViewUI));
        HoldemPoker.GameReplayListUI = GameReplayListUI;
    })(HoldemPoker = wesai.HoldemPoker || (wesai.HoldemPoker = {}));
})(wesai || (wesai = {}));
//# sourceMappingURL=GameReplayListUI.js.map